// Code generated by goctl. DO NOT EDIT.
// Source: pushconfig.proto

package pushconfigclient

import (
	"context"

	"oh-my-helper-go/apps/pushconfig/pushconfig"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PushConfigAddRequest  = pushconfig.PushConfigAddRequest
	PushConfigEditRequest = pushconfig.PushConfigEditRequest
	PushConfigRequest     = pushconfig.PushConfigRequest
	PushConfigResponse    = pushconfig.PushConfigResponse
	Request               = pushconfig.Request
	Response              = pushconfig.Response

	PushConfig interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		GetPushConfig(ctx context.Context, in *PushConfigRequest, opts ...grpc.CallOption) (*PushConfigResponse, error)
		AddPushConfig(ctx context.Context, in *PushConfigAddRequest, opts ...grpc.CallOption) (*PushConfigResponse, error)
		EditPushConfig(ctx context.Context, in *PushConfigEditRequest, opts ...grpc.CallOption) (*PushConfigResponse, error)
	}

	defaultPushConfig struct {
		cli zrpc.Client
	}
)

func NewPushConfig(cli zrpc.Client) PushConfig {
	return &defaultPushConfig{
		cli: cli,
	}
}

func (m *defaultPushConfig) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := pushconfig.NewPushConfigClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultPushConfig) GetPushConfig(ctx context.Context, in *PushConfigRequest, opts ...grpc.CallOption) (*PushConfigResponse, error) {
	client := pushconfig.NewPushConfigClient(m.cli.Conn())
	return client.GetPushConfig(ctx, in, opts...)
}

func (m *defaultPushConfig) AddPushConfig(ctx context.Context, in *PushConfigAddRequest, opts ...grpc.CallOption) (*PushConfigResponse, error) {
	client := pushconfig.NewPushConfigClient(m.cli.Conn())
	return client.AddPushConfig(ctx, in, opts...)
}

func (m *defaultPushConfig) EditPushConfig(ctx context.Context, in *PushConfigEditRequest, opts ...grpc.CallOption) (*PushConfigResponse, error) {
	client := pushconfig.NewPushConfigClient(m.cli.Conn())
	return client.EditPushConfig(ctx, in, opts...)
}
